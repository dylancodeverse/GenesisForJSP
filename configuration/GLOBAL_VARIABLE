

packageDeclaration:{
    java:{
package #package#;
    }    
    c#:{
        namespace #package#
        /{
    }
    c#-mvc-controller:{
        namespace #package# ;
    }
}

endLine:{
    java:{
    /}
    }
}


Imports:{
    java:{
import #packageSource# ;
    }    
    c#:{
        using #packageSource# ;
    }
}



annotationDeclaration:{
    java:{
        @#annotationName#(#annotationValues#)
    }
    c#:{

    }
    java-spring-model:{
@Entity
@Table(name = "#tableName#")        
    }
    java-spring-service:{
@Service        
    }
}

fieldsNoPrimaryKeyDeclaration:{
    java-spring-model:{
    @Column(name = "#name#", nullable = false)    
    #encaps# #type# #name# ;
    }
}    

fieldsWithPrimaryKey:{
    java-spring-model:{
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    #encaps# #type# #name# ;
    }
}

toStringDeclaration:{
    java:{
    @Override
    public String toString() {
        return #toString#;
    }        
    }
}

repositoryDeclaration:{
    java-spring-repository:{
public interface #name# extends JpaRepository<#Entity#, #IdType#> /{
/}
    }
}

classDeclaration:{
    java:{
public class #ClassName# /{
    }
    java-springy-model:{
        public class #ClassName# extends Repository<#ClassName#, Long>/{
    }
    c#-model:{
        public partial class #ClassName#
        /{
    }
    c#-mvc-controller:{
        public class #ClassName# : ControllerBase
        /{
    }
}

fieldsDeclaration:{
    java:{
    #encaps# #type# #name# ;
    }
    java-spring-model:{
        #annotation#
        #encaps# #type# #name# ;
    }
}


functionDeclaration:{
    java:{
    #encaps# #return# #name# (#args#) /{
        #body#
    /}
    }
}

randomContent:{
    java-spring-service:{
        
    private #Entity#Repository #entity#Repository;

    public #Entity#Service(#Entity#Repository #entity#Repository) /{
        this.#entity#Repository = #entity#Repository;
    /}

    public #Entity# save(#Entity# #entity#) /{
        return #entity#Repository.save(#entity#);
    /}

    public List<#Entity#> findAll() /{
        return #entity#Repository.findAll();
    /}

    public #Entity# findById(Long id) /{
        return #entity#Repository.findById(id).orElse(null);
    /}

    public void deleteById(Long id) /{
        #entity#Repository.deleteById(id);
    /}
        
/}    
    }
}


types:{
    Date:{
        java:{
            java.sql.Date
        }
    }    
}


SQLType:{
    varchar:{
        java:{
            String        
        }
        c#:{
            string
        }
    }

    int4:{
        java:{
            Integer
        }
    }

    Integer:{
        java:{
            Integer
        }
        c#:{
            int
        }
    }

    float8:{
        java:{
            double
        }
        c#:{
            double
        }
    }

    date:{
        java:{
            Date
        }
        c#:{
            DateOnly
        }
    }

    serial:{
        java:{
            Integer
        }
        c#:{
            int
        }
    }

    numeric:{
        java:{
            double
        }
       c#:{
            double
        }
    }
}